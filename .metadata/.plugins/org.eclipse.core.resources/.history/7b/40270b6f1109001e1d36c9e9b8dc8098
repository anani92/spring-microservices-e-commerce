package com.ejada.microservices.wallet.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.ejada.microservices.wallet.exceptions.InvalidCredentialsException;
import com.ejada.microservices.wallet.exceptions.UserAlreadyExistsException;
import com.ejada.microservices.wallet.model.User;
import com.ejada.microservices.wallet.service.UserService;
import com.ejada.microservices.wallet.service.UserWalletService;

@RestController
@RequestMapping("/api/users")
public class UserController {

	@Autowired
	private UserService userService;

	@Autowired
	private UserWalletService userWalletService;

	@PostMapping("/login")
	public ResponseEntity<User> loginUser(@RequestParam("userName") String userName,
			@RequestParam("userPassword") String userPassword) {

		User user = userService.loginUser(userName, userPassword);
		if (user == null) {
			throw new InvalidCredentialsException("Invalid user cardentials");
		}
		return ResponseEntity.ok(user);

	}

	@PostMapping("/register")
	public ResponseEntity<User> registerUser(@RequestBody User user) {
		try {
			userWalletService.createUserWallet(user);

			User registeredUser = userService.registerUser(user);
			System.out.println(registeredUser.getUserWallet());
			return ResponseEntity.ok(registeredUser);
		} catch (Exception e) {
			e.printStackTrace();
			throw new UserAlreadyExistsException("User already Exisits");
		}
	}
}
