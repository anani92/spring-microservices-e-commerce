package com.ejada.microservices.wallet.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.ejada.microservices.wallet.model.ShopWallet;
import com.ejada.microservices.wallet.model.UserWallet;
import com.ejada.microservices.wallet.service.ShopWalletService;

@RestController
@RequestMapping("/v1/wallet")
public class WalletController {
	@Autowired
	private ShopWalletService walletService;

	@PostMapping("/add")
	public ResponseEntity<ShopWallet> increaseShopCredits(@RequestParam("shopId") Long shopId, @RequestParam("totalCost") Double totalCost) {
		ShopWallet shopWallet = walletService.addCredits(totalCost, shopId);
		walletService.save(shopWallet);
		return ResponseEntity.status(HttpStatus.CREATED).body(shopWallet);
	}
	
	
	
	// get user wallet
	@GetMapping("/users/{userId}")
	public UserWallet retrieveUserWallet(@PathVariable("userId") Long userId) {
		return null;
	}
	
	// create user wallet
	@PostMapping("/users")
	public UserWallet createUserWallet(UserWallet userWallet) {
		return null;
	}

	
	// withdraw
	@PutMapping("/users/deposit/{userId}/{amount}")
	public UserWallet withdraw(@PathVariable("userId") Long userId, @PathVariable("amount") Double amount ) {
		return null;
	}
	// deposit
	@PutMapping("/users/deposit/{userId}/{amount}")
	public UserWallet deposit(@PathVariable("userId") Long userId, @PathVariable("amount") Double amount ) {
		return null;
	}
	// make purchase from user wallet and update shop credits
	
	// delete user wallet
	@GetMapping("/user/{id}")
	public ResponseEntity<UserWallet> getUserWallet() {
		return null;
	}
	
	
	
}
